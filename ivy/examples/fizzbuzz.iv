
::main : ~IO {
  io
  ::loop = tup(io:IO 1)
}

::end : N32 { 1_000_000 }

::loop : tup(~IO dup(dup(~N32 ~N32) dup(~N32 ~N32))) {
  tup(io0 dup(dup(n0 n1) dup(n2 n3)))
  n0:N32 = @n32_rem(3 d3)
  n1:N32 = @n32_rem(5 d5)

  d3:N32 = ?(
    tup(?(::fizzbuzz ::fizz r0) r0)
    tup(?(::buzz ::num r1) r1)

    tup(d5 tup(n2 ref(io0 io1)))
  )
  io1:IO = @io_print_byte(10 @io_flush(0 io2))
  
  n3:N32 = @n32_add(1 dup(m0:~N32 m1:~N32))
  m0:N32 = @n32_lt$(::end ?(::loop _:tup(IO N32) tup(io2:IO m1:N32)))
}

::fizz : tup(~N32 ref(~IO IO)) {
  tup(_ ref(io0 io1))
  io0 = @io_print_byte(70 @io_print_byte(105 @io_print_byte(122 @io_print_byte(122 io1))))
}

::buzz : tup(~N32 ref(~IO IO)) {
  tup(_ ref(io0 io1))
  io0 = @io_print_byte(66 @io_print_byte(117 @io_print_byte(122 @io_print_byte(122 io1))))
}

::fizzbuzz : tup(~N32 ref(~IO IO)) {
  tup(_ ref(io0 io2))
  ::fizz = tup(_ ref(io0 io1))
  ::buzz = tup(_ ref(io1 io2))
}

::num : tup(~N32 ref(~IO IO)) {
  tup(dup(num0 num1) ior)
  num0 = ?(
    ::num::zero
    ::num::loop
    fn(ior fn(num1 _))
  )
}

::num::zero {
  fn(ref(io0 io1) _)
  io0 = @io_print_byte(48 io1)
}

::num::loop {
  fn(ref(io0 io2) fn(dup(n0 n1) _))
  n0 = @n32_rem(10 @n32_add(48 digit))
  n1 = @n32_div(10 dup(rest0 rest1))
  rest0 = ?(
    ::num::end
    ::num::loop
    fn(ref(io0 io1) fn(rest1 _))
  )
  io1 = @io_print_byte(digit io2)
}

::num::end {
  fn(ref(io io) _)
}

